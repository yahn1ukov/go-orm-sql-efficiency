// Code generated by ent, DO NOT EDIT.

package generated

import (
	"time"

	"github.com/yahn1ukov/go-orm-sql-efficiency/ent/generated/customer"
	"github.com/yahn1ukov/go-orm-sql-efficiency/ent/generated/order"
	"github.com/yahn1ukov/go-orm-sql-efficiency/ent/generated/product"
	"github.com/yahn1ukov/go-orm-sql-efficiency/ent/generated/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescCreatedAt is the schema descriptor for created_at field.
	customerDescCreatedAt := customerFields[2].Descriptor()
	// customer.DefaultCreatedAt holds the default value on creation for the created_at field.
	customer.DefaultCreatedAt = customerDescCreatedAt.Default.(func() time.Time)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescDate is the schema descriptor for date field.
	orderDescDate := orderFields[1].Descriptor()
	// order.DefaultDate holds the default value on creation for the date field.
	order.DefaultDate = orderDescDate.Default.(func() time.Time)
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderFields[3].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCreatedAt is the schema descriptor for created_at field.
	productDescCreatedAt := productFields[4].Descriptor()
	// product.DefaultCreatedAt holds the default value on creation for the created_at field.
	product.DefaultCreatedAt = productDescCreatedAt.Default.(func() time.Time)
}
