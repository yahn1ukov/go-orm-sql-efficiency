// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "total", Type: field.TypeFloat64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "customer_id", Type: field.TypeInt},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_customers_orders",
				Columns:    []*schema.Column{OrdersColumns[4]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrderProductsColumns holds the columns for the "order_products" table.
	OrderProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "order_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt},
	}
	// OrderProductsTable holds the schema information for the "order_products" table.
	OrderProductsTable = &schema.Table{
		Name:       "order_products",
		Columns:    OrderProductsColumns,
		PrimaryKey: []*schema.Column{OrderProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_products_orders_products",
				Columns:    []*schema.Column{OrderProductsColumns[3]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "order_products_products_order_products",
				Columns:    []*schema.Column{OrderProductsColumns[4]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "stock", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		OrdersTable,
		OrderProductsTable,
		ProductsTable,
	}
)

func init() {
	OrdersTable.ForeignKeys[0].RefTable = CustomersTable
	OrderProductsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderProductsTable.ForeignKeys[1].RefTable = ProductsTable
}
